library(readr)
dataset <- read_csv(NULL)
View(dataset)
################################################################################
# Botanica Iris – Fichier Starter & Aide-Mémoire R
# Ce fichier contient les bases essentielles pour explorer et visualiser le dataset iris.
# À utiliser comme bloc-notes tout au long du projet.
################################################################################
# -------------------------------------------
#  1. PRISE EN MAIN DE BASE
# -------------------------------------------
2 + 2                       # Opérations mathématiques simples
sqrt(16)                   # Racine carrée
log(10)                    # Logarithme népérien
exp(1)                     # Exponentielle
# Créer des vecteurs
x <- c(1, 2, 3, 4, 5)
mean(x)                    # Moyenne
median(x)                  # Médiane
sd(x)                      # Écart-type
summary(x)                 # Statistiques générales
# -------------------------------------------
#  2. DÉCOUVERTE DU DATASET IRIS
# -------------------------------------------
data(iris)                 # Chargement du jeu de données intégré
head(iris)                 # Afficher les premières lignes
str(iris)                  # Structure des données
summary(iris)              # Résumé statistique
View(iris)                 # Vue Excel-like (interactif)
# Colonnes disponibles
names(iris)
unique(iris$Species)
# -------------------------------------------
#  3. FILTRER & MANIPULER LES DONNÉES (Base R)
# -------------------------------------------
# Sélectionner une colonne
iris$Sepal.Length
# Filtrer des lignes (ex : que les Setosa)
iris[iris$Species == "setosa", ]
# Créer une nouvelle variable
iris$Ratio <- iris$Petal.Length / iris$Petal.Width
# -------------------------------------------
#  4. VISUALISATION RAPIDE (Base R)
# -------------------------------------------
# Scatter plot
plot(iris$Sepal.Length, iris$Sepal.Width,
col = iris$Species,
main = "Sepal Length vs Width")
# Boxplot
boxplot(Sepal.Length ~ Species, data = iris,
main = "Longueur des sépales selon l'espèce")
# Histogramme
hist(iris$Petal.Length, breaks = 10, col = "lightblue")
# -------------------------------------------
#  5. DPLYR – MANIPULATION AVANCÉE (facultatif mais utile)
# -------------------------------------------
# Installer si besoin : install.packages("dplyr")
library(dplyr)
iris %>%
group_by(Species) %>%
summarise(moyenne = mean(Sepal.Length),
ecart_type = sd(Sepal.Length))
# -------------------------------------------
#  6. GGPLOT2 – GRAPHIQUES AVANCÉS
# -------------------------------------------
# Installer si besoin : install.packages("ggplot2")
library(ggplot2)
# Scatter plot avec ggplot2
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(size = 3) +
theme_minimal()
# Boxplot
ggplot(iris, aes(x = Species, y = Petal.Length, fill = Species)) +
geom_boxplot() +
theme_classic()
# Heatmap de corrélation
library(corrplot)
cor_matrix <- cor(iris[, 1:4])
corrplot::corrplot(cor_matrix, method = "color")
# -------------------------------------------
#  7. EXPORT / SAUVEGARDE
# -------------------------------------------
# Exporter une table en CSV
write.csv(iris, "iris_export.csv", row.names = FALSE)
# Sauvegarder un graphique
png("scatterplot.png")
plot(iris$Sepal.Length, iris$Sepal.Width, col = iris$Species)
dev.off()
################################################################################
#  FIN – Tu peux maintenant enrichir ce fichier tout au long de ton projet.
################################################################################
load("~/.RData")
################################################################################
# Botanica Iris – Fichier Starter & Aide-Mémoire R
# Ce fichier contient les bases essentielles pour explorer et visualiser le dataset iris.
# À utiliser comme bloc-notes tout au long du projet.
################################################################################
# -------------------------------------------
#  1. PRISE EN MAIN DE BASE
# -------------------------------------------
2 + 2                       # Opérations mathématiques simples
sqrt(16)                   # Racine carrée
log(10)                    # Logarithme népérien
exp(1)                     # Exponentielle
# Créer des vecteurs
x <- c(1, 2, 3, 4, 5)
mean(x)                    # Moyenne
median(x)                  # Médiane
sd(x)                      # Écart-type
summary(x)                 # Statistiques générales
# -------------------------------------------
#  2. DÉCOUVERTE DU DATASET IRIS
# -------------------------------------------
data(iris)                 # Chargement du jeu de données intégré
head(iris)                 # Afficher les premières lignes
str(iris)                  # Structure des données
summary(iris)              # Résumé statistique
View(iris)                 # Vue Excel-like (interactif)
# Colonnes disponibles
names(iris)
unique(iris$Species)
# -------------------------------------------
#  3. FILTRER & MANIPULER LES DONNÉES (Base R)
# -------------------------------------------
# Sélectionner une colonne
iris$Sepal.Length
# Filtrer des lignes (ex : que les Setosa)
iris[iris$Species == "setosa", ]
# Créer une nouvelle variable
iris$Ratio <- iris$Petal.Length / iris$Petal.Width
# -------------------------------------------
#  4. VISUALISATION RAPIDE (Base R)
# -------------------------------------------
# Scatter plot
plot(iris$Sepal.Length, iris$Sepal.Width,
col = iris$Species,
main = "Sepal Length vs Width")
# Boxplot
boxplot(Sepal.Length ~ Species, data = iris,
main = "Longueur des sépales selon l'espèce")
# Histogramme
hist(iris$Petal.Length, breaks = 10, col = "lightblue")
# -------------------------------------------
#  5. DPLYR – MANIPULATION AVANCÉE (facultatif mais utile)
# -------------------------------------------
# Installer si besoin : install.packages("dplyr")
library(dplyr)
iris %>%
group_by(Species) %>%
summarise(moyenne = mean(Sepal.Length),
ecart_type = sd(Sepal.Length))
# -------------------------------------------
#  6. GGPLOT2 – GRAPHIQUES AVANCÉS
# -------------------------------------------
# Installer si besoin : install.packages("ggplot2")
library(ggplot2)
# Scatter plot avec ggplot2
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(size = 3) +
theme_minimal()
# Boxplot
ggplot(iris, aes(x = Species, y = Petal.Length, fill = Species)) +
geom_boxplot() +
theme_classic()
# Heatmap de corrélation
library(corrplot)
cor_matrix <- cor(iris[, 1:4])
corrplot::corrplot(cor_matrix, method = "color")
# -------------------------------------------
#  7. EXPORT / SAUVEGARDE
# -------------------------------------------
# Exporter une table en CSV
write.csv(iris, "iris_export.csv", row.names = FALSE)
# Sauvegarder un graphique
png("scatterplot.png")
plot(iris$Sepal.Length, iris$Sepal.Width, col = iris$Species)
dev.off()
################################################################################
#  FIN – Tu peux maintenant enrichir ce fichier tout au long de ton projet.
################################################################################
View(iris)
# Check for problematic objects
if(exists("rstudio")) {
print("Found 'rstudio' object - removing")
rm(rstudio)
}
if(exists(".rs.isDesktop")) { print("Found '.rs.isDesktop' object - removing") rm(.rs.isDesktop) }
List all objects to check for suspicious names
ls(all.names = TRUE)
if(exists(".rs.isDesktop"))
{ print("Found '.rs.isDesktop' object - removing") rm(.rs.isDesktop) }
ls(all.names = TRUE)
setwd(C:\Users\Hippolyte_Geslain\LaPlateforme\Projet_R_2_NAME)
setwd("C:\Users\Hippolyte_Geslain\LaPlateforme\Projet_R_2_NAME")
setwd(Users\Hippolyte_Geslain\LaPlateforme\Projet_R_2_NAME)
setwd("Users\Hippolyte_Geslain\LaPlateforme\Projet_R_2_NAME)
setwd("Users\Hippolyte_Geslain\LaPlateforme\Projet_R_2_NAME")
library(shiny); runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
load("C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/data/df_working.RData")
View(baccalaureate_by_academy_france)
library(shiny); runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
load("~/.RData")
library(shiny); runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
load("C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/data/raw/.RData")
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
View(df_working)
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
View(server)
View(df_working)
View(cor_matrix)
View(cor_matrix)
View(ui)
load("C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/data/raw/.RData")
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
library(readr)
baccalaureate_by_academy_france <- read_delim("C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/data/raw/baccalaureate_by_academy_france.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(baccalaureate_by_academy_france)
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
library(shiny); runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
load("C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/data/raw/.RData")
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('C:/Users/Hippolyte_Geslain/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
library(shiny); runApp('LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
setwd("~/LaPlateforme/Projet_R_2_NAME")
runApp('Code R/bacAnalysis.R')
runApp('Code R/bacAnalysis.R')
runApp('Code R/bacAnalysis.R')
setwd("~/LaPlateforme/Projet_R_2_NAME/data/raw")
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
load("~/LaPlateforme/Projet_R_2_NAME/data/raw/.RData")
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
runApp('~/LaPlateforme/Projet_R_2_NAME/Code R/bacAnalysis.R')
